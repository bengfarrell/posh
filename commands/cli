#!/usr/bin/env node
var program = require('commander');
var tronutils = require('./utils');

// Task to list defaults
program
    .command('defaults')
    .description('list defaults that can be overriden by a tron.json file')
    .action(function(env, options){
        console.log(JSON.stringify(tronutils.defaultConfig, null, 2));
    });

// Task to install the environment
program
    .command('create [env]')
    .description('install tron for this project')
    .action(function(env, options){
        var cfg = tronutils.loadConfig();
        tronutils.create(env, cfg)
    });

// Task to install electron
program
    .command('installelectron [env]')
    .description('install Electron (or reinstall a specific version')
    .action(function(env, options){
        var cfg = tronutils.loadConfig();
        tronutils.installelectron(env, cfg)
    });

// task for components
program
    .command('comp [env]')
    .description('Work with components: Run or list')
    .option("-p, --prefixed [mode]", "Restrict listing components to these prefixes")
    .option("-d, --debug [mode]", "Enable Debug Mode at start (developer tools)")
    .option("-f, --fullscreen [mode]", "Enable FullScreen Mode at start (developer tools)")
    .action(function(env, options){
        switch (env) {
            case "list": tronutils.listComponents(options); break;
            default: tronutils.runComponent(env, options);
        }
    });

// makeconfig
program
    .command('makeconfig [env]')
    .description('Make a tron.json file in your local project to tweak the defaults')
    .action(function(env){
        var cfg = tronutils.loadConfig();
        tronutils.makeconfig(env);
    });

// run
program
    .command('run [env]')
    .description('Run our main program')
    .option("-d, --debug [mode]", "Enable Debug Mode at start (developer tools)")
    .option("-f, --fullscreen [mode]", "Enable FullScreen Mode at start")
    .action(function(env, options){
        tronutils.runProject(env, options);
    });

// get version
program
    .command('version')
    .description('Get Tron version')
    .action(function(env){
        tronutils.getVersion();
    });

// rebuild node modules
program
    .command('rebuild')
    .description('Rebuild Node modules for Electron inside your application')
    .action(function(env){
        tronutils.rebuild();
    });

program.parse(process.argv);